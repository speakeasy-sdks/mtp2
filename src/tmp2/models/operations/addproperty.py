"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import nodeproperty as shared_nodeproperty
from dataclasses_json import Undefined, dataclass_json
from tmp2 import utils
from typing import Optional



@dataclasses.dataclass
class AddPropertyRequest:
    rocket_node_path: str = dataclasses.field(metadata={'path_param': { 'field_name': 'rocketNodePath', 'style': 'simple', 'explode': False }})
    r"""Target node."""
    node_property: Optional[shared_nodeproperty.NodeProperty] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class AddProperty200ApplicationJSON:
    r"""Property added successfully."""
    node_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nodeName'), 'exclude': lambda f: f is None }})
    node_properties: Optional[list[shared_nodeproperty.NodeProperty]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nodeProperties'), 'exclude': lambda f: f is None }})
    




@dataclasses.dataclass
class AddPropertyResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    add_property_200_application_json_object: Optional[AddProperty200ApplicationJSON] = dataclasses.field(default=None)
    r"""Property added successfully."""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    

